// Generated from c:/Users/hanab/ssl-antlr-calculator/Usuarios.g4 by ANTLR 4.13.2
// jshint ignore: start
import antlr4 from 'antlr4';


const serializedATN = [4,0,12,89,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,
4,7,4,2,5,7,5,2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,4,5,43,8,5,
11,5,12,5,44,1,6,1,6,5,6,49,8,6,10,6,12,6,52,9,6,1,6,1,6,1,7,1,7,1,7,1,7,
1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,7,3,7,70,8,7,1,8,1,8,5,8,74,8,8,10,
8,12,8,77,9,8,1,9,1,9,1,10,4,10,82,8,10,11,10,12,10,83,1,10,1,10,1,11,1,
11,0,0,12,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,1,0,
4,1,0,48,57,2,0,65,90,97,122,3,0,48,57,65,90,97,122,3,0,9,10,13,13,32,32,
93,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,
0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,
1,0,0,0,1,25,1,0,0,0,3,33,1,0,0,0,5,35,1,0,0,0,7,37,1,0,0,0,9,39,1,0,0,0,
11,42,1,0,0,0,13,46,1,0,0,0,15,69,1,0,0,0,17,71,1,0,0,0,19,78,1,0,0,0,21,
81,1,0,0,0,23,87,1,0,0,0,25,26,5,117,0,0,26,27,5,115,0,0,27,28,5,117,0,0,
28,29,5,97,0,0,29,30,5,114,0,0,30,31,5,105,0,0,31,32,5,111,0,0,32,2,1,0,
0,0,33,34,5,123,0,0,34,4,1,0,0,0,35,36,5,125,0,0,36,6,1,0,0,0,37,38,5,61,
0,0,38,8,1,0,0,0,39,40,5,59,0,0,40,10,1,0,0,0,41,43,7,0,0,0,42,41,1,0,0,
0,43,44,1,0,0,0,44,42,1,0,0,0,44,45,1,0,0,0,45,12,1,0,0,0,46,50,5,34,0,0,
47,49,3,19,9,0,48,47,1,0,0,0,49,52,1,0,0,0,50,48,1,0,0,0,50,51,1,0,0,0,51,
53,1,0,0,0,52,50,1,0,0,0,53,54,5,34,0,0,54,14,1,0,0,0,55,56,5,118,0,0,56,
57,5,101,0,0,57,58,5,114,0,0,58,59,5,100,0,0,59,60,5,97,0,0,60,61,5,100,
0,0,61,62,5,101,0,0,62,63,5,114,0,0,63,70,5,111,0,0,64,65,5,102,0,0,65,66,
5,97,0,0,66,67,5,108,0,0,67,68,5,115,0,0,68,70,5,111,0,0,69,55,1,0,0,0,69,
64,1,0,0,0,70,16,1,0,0,0,71,75,7,1,0,0,72,74,7,2,0,0,73,72,1,0,0,0,74,77,
1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,18,1,0,0,0,77,75,1,0,0,0,78,79,7,
2,0,0,79,20,1,0,0,0,80,82,7,3,0,0,81,80,1,0,0,0,82,83,1,0,0,0,83,81,1,0,
0,0,83,84,1,0,0,0,84,85,1,0,0,0,85,86,6,10,0,0,86,22,1,0,0,0,87,88,9,0,0,
0,88,24,1,0,0,0,6,0,44,50,69,75,83,1,6,0,0];


const atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

const decisionsToDFA = atn.decisionToState.map( (ds, index) => new antlr4.dfa.DFA(ds, index) );

export default class UsuariosLexer extends antlr4.Lexer {

    static grammarFileName = "Usuarios.g4";
    static channelNames = [ "DEFAULT_TOKEN_CHANNEL", "HIDDEN" ];
	static modeNames = [ "DEFAULT_MODE" ];
	static literalNames = [ null, "'usuario'", "'{'", "'}'", "'='", "';'" ];
	static symbolicNames = [ null, null, null, null, null, null, "NUMERO", 
                          "CADENA", "BOOLEANO", "IDENTIFICADOR", "CARACTER", 
                          "WS", "ERROR" ];
	static ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "NUMERO", 
                      "CADENA", "BOOLEANO", "IDENTIFICADOR", "CARACTER", 
                      "WS", "ERROR" ];

    constructor(input) {
        super(input)
        this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.atn.PredictionContextCache());
    }
}

UsuariosLexer.EOF = antlr4.Token.EOF;
UsuariosLexer.T__0 = 1;
UsuariosLexer.T__1 = 2;
UsuariosLexer.T__2 = 3;
UsuariosLexer.T__3 = 4;
UsuariosLexer.T__4 = 5;
UsuariosLexer.NUMERO = 6;
UsuariosLexer.CADENA = 7;
UsuariosLexer.BOOLEANO = 8;
UsuariosLexer.IDENTIFICADOR = 9;
UsuariosLexer.CARACTER = 10;
UsuariosLexer.WS = 11;
UsuariosLexer.ERROR = 12;



